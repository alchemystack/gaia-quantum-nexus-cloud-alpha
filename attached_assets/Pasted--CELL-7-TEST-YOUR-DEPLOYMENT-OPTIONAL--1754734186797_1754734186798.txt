# ============================================
# CELL 7: TEST YOUR DEPLOYMENT (OPTIONAL)
# ============================================
"""
Optional: Test your deployed endpoints
"""

import requests
import json

# Your deployment endpoints
deployment_name = "gaia-quantum-transformers-optimized"
health_url = f"https://{deployment_name}--quantumgpt120btransformers-health.modal.run"
generate_url = f"https://{deployment_name}--quantumgpt120btransformers-generate.modal.run"

print("🧪 Testing deployed endpoints...")
print("=" * 60)

# Test health endpoint
print("\n1. Testing health endpoint...")
try:
    response = requests.get(health_url, timeout=10)
    if response.status_code == 200:
        health_data = response.json()
        print("✅ Health check passed!")
        print(f"   Status: {health_data.get('status')}")
        print(f"   Model: {health_data.get('model')}")
        print(f"   Quantum: {health_data.get('quantum')}")
    else:
        print(f"❌ Health check failed: {response.status_code}")
except Exception as e:
    print(f"❌ Health check error: {e}")

# Test generation endpoint
print("\n2. Testing generation endpoint...")
test_payload = {
    "prompt": "The meaning of quantum consciousness is",
    "max_tokens": 50,
    "temperature": 0.7,
    "quantum_profile": "medium",
    "diagnostics": True
}

try:
    response = requests.post(
        generate_url,
        json=test_payload,
        timeout=30
    )
    if response.status_code == 200:
        result = response.json()
        if result.get("status") == "success":
            print("✅ Generation test passed!")
            print(f"   Generated text: {result.get('generated_text', '')[:100]}...")
            print(f"   Tokens generated: {result.get('tokens_generated')}")
            print(f"   Quantum profile: {result.get('quantum_profile')}")
        else:
            print(f"⚠️  Generation returned error: {result.get('message')}")
    else:
        print(f"❌ Generation failed: {response.status_code}")
except Exception as e:
    print(f"❌ Generation error: {e}")

print("\n=" * 60)
print("🎉 All tests complete!")
print("\nYour quantum-enhanced GPT-OSS 120B model is ready to use!")
print("Add the endpoints to Replit and start generating quantum text!")